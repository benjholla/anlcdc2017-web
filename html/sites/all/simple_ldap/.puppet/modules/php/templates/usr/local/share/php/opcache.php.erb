<?php
/** THIS FILE IS MANAGED BY PUPPET
 ** modules<%= template_source.gsub(Regexp.new("^#{Puppet::Node::Environment.current[:modulepath].gsub(':','|')}"),"") %>
 **/

// Global Variables
$time = time();

// Don't cache this page
header("Pragma: no-cache");                                         // HTTP/1.0
header("Cache-Control: private, no-cache, no-store, max-age=0");
header("Cache-Control: must-revalidate, proxy-revalidate", false);  // HTTP/1.1

// Get OPcache status
$opcache = opcache_get_status(FALSE);

// Parse query string
$item = isset($_GET['q']) ? $_GET['q'] : '';
$verbose = isset($_GET['v']) && $_GET['v'] == true || $item == '';

// Do the work
function option($item) {
    static $value;

    if (!$item) {
        return false;
    }

    if (isset($value[$item])) {
        return $value[$item];
    }

    $opcache = &$GLOBALS['opcache'];

    switch($item) {

        case 'uptime':
            $value[$item] = $GLOBALS['time'] - $opcache['opcache_statistics']['start_time'];
            break;

        case 'used_memory':
        case 'free_memory':
        case 'wasted_memory':
        case 'current_wasted_percentage':
            $value[$item] = $opcache['memory_usage'][$item];
            break;

        case 'num_cached_scripts':
        case 'num_cached_keys':
        case 'max_cached_keys':
        case 'hits':
        case 'start_time':
        case 'last_restart_time':
        case 'oom_restarts':
        case 'hash_restarts':
        case 'manual_restarts':
        case 'misses':
        case 'blacklist_misses':
        case 'blacklist_miss_ratio':
        case 'opcache_hit_rate':
            $value[$item] = $opcache['opcache_statistics'][$item];
            break;

        default:
            $value[$item] = 'undefined';
    }

    return $value[$item];
}

function options($options) {
    ksort($options);
    $return = '';
    foreach ($options as $option => $desc) {
        $return .= '<tr>';
        $return .= '<td><a href="' . $_SERVER['PHP_SELF'] . '?q=' . $option . '">' . $option . '</a></td>';
        $return .= '<td>' . option($option) . '</td>';
        $return .= '<td>' . $desc . '</td>';
        $return .= '</tr>';
    }
    return $return;
}

// Show the result
if ($verbose && option($item)) {
    echo '<h1>' . $item . ': ';
}

echo option($item);

if ($verbose) {
    echo '</h1><table border="1" cellpadding="5" cellspacing="0">';
    echo options(array(
                       'used_memory' => 'Used Memory (B)',
                       'free_memory' => 'Available Memory (B)',
                       'wasted_memory' => 'Wasted Memory (B)',
                       'current_wasted_percentage' => 'Current Wasted Memory Percentage',
                       'num_cached_scripts' => 'Number of Cached Scripts',
                       'num_cached_keys' => 'Number of Cached Keys',
                       'max_cached_keys' => 'Maximum Cached Keys',
                       'hits' => 'Cache Hits',
                       'start_time' => 'Start Time',
                       'last_restart_time' => 'Last Restart Time',
                       'oom_restarts' => 'Out-Of-Memory Restarts',
                       'hash_restarts' => 'Hash Restarts',
                       'manual_restarts' => 'Manual Restarts',
                       'misses' => 'Cache Misses',
                       'blacklist_misses' => 'Blacklist Misses',
                       'blacklist_miss_ratio' => 'Blacklist Miss Ratio',
                       'opcache_hit_rate' => 'Hit Rate',
                       ));
    echo '</table>';

}
